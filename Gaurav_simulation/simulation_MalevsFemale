#!/bin/bash
#SBATCH --partition=priority
#SBATCH --ntasks=24
#SBATCH --time=32:00:00
#SBATCH --mem=128GB

#1.run renumf90
#you must have renum.par in your directory
echo renum.par | renumf90 | tee renum.log #running renumf90

#2. Removing phenotypes from young animals(gen 10)

awk '$6!=10' renf90.dat > renf90.train  #creating a training population for first 9 gen, 10th generation is on column 6
awk '$6==10' renf90.dat | awk '{print $3}' | sort > ids.gen10 # saving animal ids for gen 10

#part2;Estimation of gebv, snp effects with variance

awk '$6==10' renf90.dat | awk ' {print $3,$5}' | sort  +0 -1 > tbv.gen10 #save ids and TBV for generation 10

#Training population- Males

mkdir M_train #making a directory
cd M_train #enter into the directory

awk '$2==M' ../renf90.train  > renf90.dat #copying the training data set and saving it as renf90.dat
ln -s ../genotypes.snp .  # softlink for the genotypes file
ln -s ../genotypes.snp_XrefID .
cp ../renadd02.ped .       # softlink for the pedigree file
cp ../renf90.par .
cp ../ids.gen10 .
cp ../tbv.gen10 .
cp ../gen_map.txt .

cp renf90.par pre.par #initialize parameter file for pregs
cp renf90.par post.par #initialize parameter file for postgs


echo "OPTION saveGInverse" >> pre.par #add option to saves G inverse for gwas pregsf
echo "OPTION map_file gen_map.txt" >> pre.par #add option for map file
echo "OPTION snp_p_value" >>pre.par #computes p-values for GWAS from elements of the inverse of MME from blupf90

echo "OPTION readGInverse" >> post.par #add option for postgsf which reads G inverse which we created
echo "OPTION map_file gen_map.txt" >> post.par #add option to assign SNP to their location for Manhattan plots, so chromosomes are visualized in different colors
echo "OPTION Manhattan_plot_R_format pdf" >> post.par #add option to plot the Manhattan plot (SNP effects) for each trait and correlated effects using R(format is pdf).
echo "OPTION windows_variance 20" >> post.par #add option to calculates the variance explained by 20 adjacent SNPs
echo "OPTION windows_variance_type 1" >> post.par #add option to calculate the variance explained by n adjacent SNPs(1 for moving windows)
echo "OPTION snp_p_value" >> post.par #computes p-values for GWAS from elements of the inverse of MME from blupf90

#before you run blupf90 or any other software, I suggest using:
ulimit -s unlimited
export OMP_STACKSIZE=128M

echo pre.par | blupf90 | tee ssgblup_M_pre.log #run pregs
echo post.par | postGSf90 | tee ssgblup_M_post.log #run postgs

awk '$2==2' solutions | awk ' {print $3, $4}' | sort +0 -1 > solutions.sort #save ebvs for generation 10
join -1 1 -2 1 solutions.sort ids.gen10 > solutions.gen10_M #gebv

join -1 1 -2 1 solutions.sort tbv.gen10 > sol_tv.gen10_M  #tbv

join -1 1 -2 1 solutions.gen10_M tbv.gen10 > val.M.gen10 #to validate

####Training population- Males 

cd ..
mkdir F_train
cd F_train

#create a file with Females only
awk '$2==F' ../renf90.train > renf90.dat #copying the training data set and saving it as renf90.dat
ln -s ../renadd02.ped . # softlink for the pedigree file
ln -s ../genotypes.snp . #softlink for the genotype file
ln -s ../genotypes.snp_XrefID . #and the xref ID file
cp ../ids.gen10 .
cp ../tbv.gen10 .
cp ../renf90.par .
cp ../gen_map.txt .

cp renf90.par pre.par #initialize parameter file for pregs
cp renf90.par post.par #initialize parameter file for postgs


echo "OPTION saveGInverse" >> pre.par #add option for gwas pregs
echo "OPTION map_file gen_map.txt" >> pre.par #add option for mapped file
echo "OPTION snp_p_value" >> pre.par #computes p-values for GWAS from elements of the inverse of MME from blupf90

echo "OPTION readGInverse" >> post.par #add option for reading G inverse file
echo "OPTION map_file gen_map.txt" >> post.par #add option to assign SNP to their location for Manhattan plots for visualising chr in different colours
echo "OPTION Manhattan_plot_R_format pdf" >> post.par #add option to plot the Mplot(SNP effects) for each trait and correlated effects using R in pdf format
echo "OPTION windows_variance 20" >> post.par #calculates the variance explained by 20 adjacent SNPs
echo "OPTION windows_variance_type 1" >> post.par #add option to set window type for variances calculation(1 for moving windows)
echo "OPTION snp_p_value" >>post.par #computes p-values for GWAS from elements of the inverse of MME from blupf90

#before you run blupf90 or any other software, I suggest using:
ulimit -s unlimited
export OMP_STACKSIZE=128M

echo pre.par | blupf90 | tee ssgblup_F_pre.log #run pregs
echo post.par | postGSf90 | tee ssgblup_F_post.log #run postgs

awk '$2==2' solutions | awk ' {print $3, $4}' | sort +0 -1 > solutions.sort #save ebvs for generation 10
join -1 1 -2 1 solutions.sort ids.gen10 > solutions.gen10_F # gebv
join -1 1 -2 1 solutions.sort tbv.gen10 > sol_tv.gen10_F # tbv
join -1 1 -2 1 solutions.gen10_F tbv.gen10 > val.F.gen10 #to validate



cd ..
#module to load R
module load r/4.2.2
R #enter into R

#1.Correlation between gebv
#Note- change the directory from where you can pull your files needed

M<-read.table('/gpfs/sharedfs1/zilla-lab/simulation_zilla/simulation_sex/M_train/val.M.gen10')
F<-read.table('/gpfs/sharedfs1/zilla-lab/simulation_zilla/simulation_sex/F_train/val.F.gen10')



cor(M) #
cor(F) #

cor(M[,2],F[,2])

#2. Correlation between snp effects

M_s<-read.table('/gpfs/sharedfs1/zilla-lab/simulation_zilla/simulation_sex/gen_M_train/snp_sol',header=T)
F_s<-read.table('/gpfs/sharedfs1/zilla-lab/simulation_zilla/simulation_sex/gen_F_train/snp_sol',header=T)

cor(M_s[,6],F_s[,6]) 

#3.Accuracy(Correlation between GEBV and TBV)

M_g<-read.table('/gpfs/sharedfs1/zilla-lab/simulation_zilla/simulation_sex/gen_M_train/val.M.gen10')
F_g<-read.table('/gpfs/sharedfs1/zilla-lab/simulation_zilla/simulation_sex/gen_F_train/val.F.gen10')

M_t<-read.table('/gpfs/sharedfs1/zilla-lab/simulation_zilla/simulation_sex/M_train/sol_tv.gen10_M')
F_t<-read.table('/gpfs/sharedfs1/zilla-lab/simulation_zilla/simulation_sex/F_train/sol_tv.gen10_F')


cor(M_g[,2],M_t[,3]) 
cor(F_g[,2],F_t[,3])


#or
cor(M_t[,2],M_t[,3])
cor(F_t[,2],M_t[,3])
