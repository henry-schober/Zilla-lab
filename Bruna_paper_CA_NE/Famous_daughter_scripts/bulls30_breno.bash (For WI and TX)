ln -s /data/gaurav/phenotypes/phen_red_wi .  #adding soft link to phenotype files
ln -s /data/gaurav/phenotypes/phen_red_tx .

wc -l  phen_red_wi #counting how many animals
wc -l  phen_red_tx

cat phen_red_wi phen_red_tx > phenotypes.all #creating a single file
cp /data/breno/ped.noupg .  #copying original files

#grabbed the renumf par file from the original two trait directory
ln -s /data/henry/henrys/first_lac/bulls30/30_daughters/renum.par .

echo renum.par | renumf90 | tee renum.log #running renum

awk '{print $1}' phen_red_wi | sort +0 -1 > ids_wi_original #only the ids from wi cows
awk '{print $1}' phen_red_tx | sort +0 -1 > ids_tx_original #only ids from tx cows



awk '{print $10,$2}' renadd06.ped | sort +0 -1 > id_sire #this file contains original ids and sire ids - sire id is the renumbered one


join -1 1 -2 1 id_sire ids_wi_original > wi_with_sire #here we are having only the ids of cows from wi with their sire
join -1 1 -2 1 id_sire ids_tx_original > tx_with_sire #same as above for tx


wc -l wi_with_sire #confirms that we have the same number of animals as the original files
wc -l tx_with_sire

awk '{print $2}' wi_with_sire| sort +0 -1 | uniq -c | awk '$2!=0' > sires_wi #print sire ids for ca, count daughters, and remove sire =0
awk '{print $2}' tx_with_sire| sort +0 -1 | uniq -c | awk '$2!=0' > sires_tx #same as above for ne


awk '$1>30' sires_wi > famous_sires_wi #select sires with more than 30 daughters for ca
awk '$1>30' sires_tx > famous_sires_tx #same as above for ne



awk '{print $2}' famous_sires_wi | sort > to_keep_wi #keep only sire ids for wi - renumbered sire ID of 30+daughters in wi
awk '{print $2}' famous_sires_tx | sort > to_keep_tx #same as above for tx

join -1 1 -2 1 to_keep_wi to_keep_tx | sort +0 -1 > to_keep_all #join sires, so only sires in both files are kept - renumbered id. Use this file for extracting phenotype

awk '{print $1,$10}' renadd06.ped | sort +0 -1  > xref #creates a cross reference file

join -1 1 -2 1 to_keep_all xref | awk '{print $2}' | sort +0 -1  > bulls_original_ids #extract original ids for bulls

#in this last file we have 2040 bulls with more than 30 daughters in each state

## If you want to get all of the daughters phenotypes together
sort +1 -2 id_sire | awk '$2!=0' > sorted_id_sire #sorted the renumbered sire id and original daughter id file by sire id and got rid of the sire id of 0
join -1 1 -2 2 to_keep_all sorted_id_sire | awk '{print $2}' > famous_daughters_orig_id #got original id of all daughters with famous sires
sort +0 -1 famous_daughters_orig_id > famous_daughter.sorted
sort +0 -1 phenotypes.all > phen.sorted
join -1 1 -2 1 famous_daughter.sorted phen.sorted > famous_daughter.phen

## WI
sort +1 -2 wi_with_sire | awk '$2!=0' > sorted_id_sire_WI #sorted the renumbered sire id and original daughter id file by sire id and got rid of the sire id of 0
join -1 1 -2 2 to_keep_all sorted_id_sire_WI | awk '{print $2}' |uniq -c | awk '{print $2}' > famous_daughters_orig_id_WI #got original id of NE daughters with famous sires
sort +0 -1 famous_daughters_orig_id_WI > WI_famous_daughter.sorted
sort +0 -1 pheno_red_wi > phen_WI.sorted
join -1 1 -2 1 WI_famous_daughter.sorted phen_WI.sorted > famous_daughter_WI.phen

## TX

sort +1 -2 tx_with_sire | awk '$2!=0' > sorted_id_sire_TX #sorted the renumbered sire id and original daughter id file by sire id and got rid of the sire id of 0
join -1 1 -2 2 to_keep_all sorted_id_sire_TX | awk '{print $2}' |uniq -c | awk '{print $2}' > famous_daughters_orig_id_TX #got original id of CA daughters with famous sires
sort +0 -1 famous_daughters_orig_id_TX > TX_famous_daughter.sorted
sort +0 -1 phen_red_tx > phen_TX.sorted
join -1 1 -2 1 TX_famous_daughter.sorted phen_TX.sorted > famous_daughter_TX.phen
